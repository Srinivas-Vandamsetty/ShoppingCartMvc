@model ShoppingCartMvcUI.Models.DTOs.BookDisplayModel
@{
    int pageSize = 12;
    int pageNumber = Context.Request.Query["page"].ToString() == "" ? 1 : int.Parse(Context.Request.Query["page"]);
    var pagedBooks = Model.Books.Skip((pageNumber - 1) * pageSize).Take(pageSize);
}

<div class="container mt-4">
    <div class="d-flex justify-content-center">
        <div class="my-2">
            <form asp-action="Index" method="get" class="row g-3 align-items-center justify-content-center">
                <div class="col-auto">
                    <select class="form-select" id="genreId" name="genreId">
                        <option selected>Genre</option>
                        @foreach (var genre in Model.Genres)
                        {
                            <option selected="@(genre.Id == Model.GenreId)" value="@genre.Id">@genre.GenreName</option>
                        }
                    </select>
                </div>
                <div class="col-auto">
                    <div class="input-group">
                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                        <input type="text" class="form-control" value="@Model.STerm" id="sterm" name="sterm" placeholder="Search by title">
                    </div>
                </div>
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary">Search</button>
                    <a href="/Home/Index" class="btn btn-dark">Reset</a>
                </div>
            </form>
        </div>
    </div>

    <div class="row mt-4">
        @foreach (var book in pagedBooks)
        {
            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card book-card shadow-sm border-0">
                    <div class="position-relative">
                        <img src="/images/@(string.IsNullOrEmpty(book.Image) ? "NoImage.png" : book.Image)" class="card-img-top book-image" alt="Book Image">
                        @* @if (book.Quantity == 0) *@
                        @* { *@
                        @*     <span class="badge bg-danger position-absolute top-0 end-0 m-2">Add To Cart</span> *@
                        @* } *@
                    </div>
                    <div class="card-body text-center">
                        <h6 class="fw-bold">@book.BookName</h6>
                        <p class="mb-1"><strong>Genre:</strong> @book.GenreName</p>
                        <p class="mb-1"><strong>Author:</strong> @book.AuthorName</p>
                        <p class="fw-bold text-primary">₹@book.Price</p>

                        @if (book.Quantity > 0)
                        {
                            <button type="button" onclick="add(@book.Id, this)" class="btn btn-success w-100">
                                <i class="bi bi-cart-plus"></i> Add to Cart
                            </button>
                        }
                        else
                        {
                            <button class="btn btn-secondary w-100" >Add to Cart</button>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        async function add(bookId, btn) {
            var usernameEl = document.getElementById("username");
            if (usernameEl == null) {
                window.location.href = "/Identity/Account/Login";
                return;
            }

            btn.innerHTML = '<i class="bi bi-hourglass-split"></i> Adding...';
            btn.disabled = true;

            try {
                var response = await fetch(`/Cart/AddItem?bookId=${bookId}`);
                if (response.status == 200) {
                    var result = await response.json();
                    document.getElementById("cartCount").innerHTML = result;
                    window.location.href = "#cartCount";
                    btn.innerHTML = '<i class="bi bi-cart-check"></i> Added';
                    btn.classList.replace("btn-success", "btn-secondary");
                }
            } catch (err) {
                console.log(err);
                btn.innerHTML = '<i class="bi bi-cart-plus"></i> Add to Cart';
                btn.disabled = false;
            }
        }
    </script>
}

<style>
    .book-card {
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .book-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.15);
        }

    .book-image {
        height: 200px;
        object-fit: cover;
    }
</style>
